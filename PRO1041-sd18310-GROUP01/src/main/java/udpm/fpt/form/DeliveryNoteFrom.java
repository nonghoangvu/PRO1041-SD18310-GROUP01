/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package udpm.fpt.form;

import com.raven.datechooser.DateBetween;
import com.raven.datechooser.DateChooser;
import com.raven.datechooser.listener.DateChooserAction;
import com.raven.datechooser.listener.DateChooserAdapter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import static udpm.fpt.Application.getBean;
import udpm.fpt.component.Notification;
import udpm.fpt.component.UpdateDelivery;
import udpm.fpt.model.Bill;
import udpm.fpt.model.BillDetails;
import udpm.fpt.model.DeliveryNote;
import udpm.fpt.model.TransportUnit;
import udpm.fpt.model.User;
import udpm.fpt.repository.IDelivery_noteRespository;
import udpm.fpt.swing.table.TableCustom;
import udpm.serviceDelivery.MailSender;
import udpm.serviceDelivery.NumberFilter;
import udpm.serviceDelivery.Service;

/**
 *
 * @author PHONG PC
 */
public class DeliveryNoteFrom extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryNote
     */
    public DeliveryNoteFrom(User user) {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPaneHoaDon = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtNgayGiao = new udpm.fpt.swing.TextField();
        txtSoLuong = new udpm.fpt.swing.TextField();
        txtTenKhachHang = new udpm.fpt.swing.TextField();
        txtDiaChi = new udpm.fpt.swing.TextField();
        txtSDT = new udpm.fpt.swing.TextField();
        txtTongTien = new udpm.fpt.swing.TextField();
        cbbDonViGiao = new udpm.fpt.swing.Combobox();
        txtPhiShip = new udpm.fpt.swing.TextField();
        textAreaScroll1 = new udpm.fpt.swing.TextAreaScroll();
        txtTenSanPham = new udpm.fpt.swing.TextArea();
        textAreaScroll2 = new udpm.fpt.swing.TextAreaScroll();
        txtGhiChu = new udpm.fpt.swing.TextArea();
        jLabel2 = new javax.swing.JLabel();
        btnTaoPhieu = new udpm.fpt.swing.ButtonMessage();
        btnHuy = new udpm.fpt.swing.ButtonMessage();
        jPanel16 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lbNgayTao = new javax.swing.JLabel();
        lbNgayXuatKho = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        lbDiaChi = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lbTenKhachHang = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lbGhiChu = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lbSanPham = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtLoaiVanChuyen = new javax.swing.JLabel();
        lbTienCOD = new javax.swing.JLabel();
        btnDeliveryCompleted = new javax.swing.JButton();
        btnBenVanChuyen = new javax.swing.JButton();
        jScrollPaneDanhSach2 = new javax.swing.JScrollPane();
        tblDanhSach2 = new javax.swing.JTable();
        txtXapSep2 = new udpm.fpt.swing.TextField();
        cbbTimKiem = new udpm.fpt.swing.Combobox();
        txtTimKiem = new udpm.fpt.swing.TextField();
        cbbSearchStatus = new udpm.fpt.swing.Combobox();

        setPreferredSize(new java.awt.Dimension(1489, 880));

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setOpaque(true);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Bill code", "Customer name", "Payment methods", "Payment status", "Notes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPaneHoaDon.setViewportView(tblHoaDon);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Invoice List");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneHoaDon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txtNgayGiao.setLabelText("Creation Date");

        txtSoLuong.setLabelText("Total Amount");

        txtTenKhachHang.setLabelText("Customer name");

        txtDiaChi.setLabelText("Delivery Address");

        txtSDT.setLabelText("Phone Number");

        txtTongTien.setLabelText("Cash on Delivery");

        cbbDonViGiao.setLabeText("Shipping Type");

        txtPhiShip.setLabelText("Shipping Cost");

        textAreaScroll1.setBackground(new java.awt.Color(255, 255, 255));
        textAreaScroll1.setLabelText("Product name");

        txtTenSanPham.setColumns(20);
        txtTenSanPham.setRows(5);
        textAreaScroll1.setViewportView(txtTenSanPham);

        textAreaScroll2.setBackground(new java.awt.Color(255, 255, 255));
        textAreaScroll2.setLabelText("Note");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        textAreaScroll2.setViewportView(txtGhiChu);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNgayGiao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTenKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbDonViGiao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPhiShip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textAreaScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addComponent(textAreaScroll2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txtNgayGiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textAreaScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbDonViGiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPhiShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textAreaScroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Create a delivery note");

        btnTaoPhieu.setBackground(new java.awt.Color(0, 204, 255));
        btnTaoPhieu.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoPhieu.setText("Create a Delivery Note");
        btnTaoPhieu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoPhieuActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(255, 51, 51));
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Cancel");
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btnTaoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTaoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Create delivery note", jPanel15);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delivery Note List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jButton2.setText(" Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setOpaque(false);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("Detailed Packing List");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel15.setText("Packing Date:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel17.setText("Estimated Date:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Edit Information");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel16.setText("Delivery address");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel22.setText("Customer name:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel19.setText("Note:");

        jScrollPane2.setBorder(null);

        lbGhiChu.setColumns(20);
        lbGhiChu.setRows(5);
        lbGhiChu.setBorder(null);
        jScrollPane2.setViewportView(lbGhiChu);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("Product:");

        jScrollPane3.setBorder(null);

        lbSanPham.setColumns(20);
        lbSanPham.setRows(5);
        lbSanPham.setBorder(null);
        jScrollPane3.setViewportView(lbSanPham);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setText("Total Amount:");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel24.setText("Shipping Type:");

        btnDeliveryCompleted.setText("Delivery Completed");
        btnDeliveryCompleted.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeliveryCompletedMouseClicked(evt);
            }
        });
        btnDeliveryCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveryCompletedActionPerformed(evt);
            }
        });

        btnBenVanChuyen.setText("Transfer to the shipping department");
        btnBenVanChuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBenVanChuyenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTenKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbNgayTao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTienCOD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbNgayXuatKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoaiVanChuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3)))
                                .addGap(0, 240, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnBenVanChuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeliveryCompleted)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTenKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lbNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbNgayXuatKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTienCOD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtLoaiVanChuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel20))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeliveryCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBenVanChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
        );

        tblDanhSach2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tracking number", "Invoice number", "Waybill number", "Status", "Type of transport", "Shipping cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSach2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblDanhSach2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSach2MouseClicked(evt);
            }
        });
        jScrollPaneDanhSach2.setViewportView(tblDanhSach2);

        txtXapSep2.setLabelText("Order Date");

        cbbTimKiem.setLabeText("Search for");

        txtTimKiem.setLabelText("Search");

        cbbSearchStatus.setLabeText("Status");
        cbbSearchStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbSearchStatusMouseClicked(evt);
            }
        });
        cbbSearchStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSearchStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPaneDanhSach2, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtXapSep2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(cbbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbbSearchStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtXapSep2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbSearchStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneDanhSach2)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 703, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1531, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 859, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Quản lý phiếu giao hàng", jPanel16);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        txtXapSep2.setText(simple.format(new Date()));
        txtTimKiem.setText("");
        cbbTimKiem.setSelectedIndex(0);
        loadDataAndFillTableDeli();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        this.deleteDeli();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = tblDanhSach2.getSelectedRow();
        if (row == -1) {
            return;
        }
        Long idDanhSach = Long.valueOf(tblDanhSach2.getValueAt(row, 0).toString());
        Optional<DeliveryNote> list = sv.filById(idDanhSach);
        UpdateDelivery update = new UpdateDelivery(this, idDanhSach, maVanDon);
        update.setFrom(list);
        update.setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeliveryCompletedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeliveryCompletedMouseClicked
        int row = tblDanhSach2.getSelectedRow();
        if (row == -1) {
            return;
        }
        Long idDanhSach = Long.valueOf(tblDanhSach2.getValueAt(row, 0).toString());
        Optional<DeliveryNote> list = sv.filById(idDanhSach);
        DeliveryNote deliverynote = list.get();
        deliverynote.setStatus_id(5);
        sv.updateDeliveryNote(idDanhSach, maVanDon, deliverynote);
        loadDataAndFillTableDeli();
    }//GEN-LAST:event_btnDeliveryCompletedMouseClicked

    private void tblDanhSach2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSach2MouseClicked
        int row = tblDanhSach2.getSelectedRow();
        if (row == -1) {
            return;
        }
        setFormThongTin(row);
    }//GEN-LAST:event_tblDanhSach2MouseClicked

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        if (evt.getClickCount() == 2) {
            int row = tblHoaDon.getSelectedRow();
            if (row == -1) {
                return;
            } else {
                List<BillDetails> billDetail = listBillDetail;
                List<Bill> bill = listBill;
                Bill b = bill.get(row);
                double tongTien = b.getTotalAmountAfterTax();
                //this.idSanPham = b.getCustomerId().getId();
                idkhachHang = b.getCustomerId().getId();
                idHoaDon = b.getId();
                txtTenKhachHang.setText(b.getCustomerId().getFullname());
                txtDiaChi.setText(b.getCustomerId().getAddress());
                txtSDT.setText(b.getCustomerId().getPhone());
                txtTongTien.setText(String.valueOf(tongTien));
                txtTenSanPham.setText("");
                if (cbbDonViGiao.getSelectedIndex() == 0) {
                    txtPhiShip.setText("18.000");
                }
                int soLuong = 0;
                for (BillDetails getbillDetail : billDetail) {
                    if (Objects.equals(getbillDetail.getBill_id().getId(), idHoaDon)) {
                        txtTenSanPham.append(getbillDetail.getMilk_id() == null ? "" : getbillDetail.getMilk_id().getProduct_name() + "\n");
                        if (getbillDetail.getMilk_id() != null) {
                            this.idSanPham = getbillDetail.getMilk_id().getId();
                        }
                        soLuong = soLuong + getbillDetail.getQuantity();
                    }
                }
                txtSoLuong.setText(String.valueOf(soLuong));
            }
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnDeliveryCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveryCompletedActionPerformed
        int row = tblDanhSach2.getSelectedRow();
        if (row == -1) {
            return;
        }
        Long idDanhSach = Long.valueOf(tblDanhSach2.getValueAt(row, 0).toString());
        Optional<DeliveryNote> list = sv.filById(idDanhSach);
        DeliveryNote deliverynote = list.get();
        deliverynote.setStatus_id(5);
        sv.updateDeliveryNote(idDanhSach, maVanDon, deliverynote);
        loadDataAndFillTableDeli();
    }//GEN-LAST:event_btnDeliveryCompletedActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String idStatus;
        String timKiem;
        if (txtTimKiem.getText().trim().isEmpty()) {
            timKiem = "";
        }
        timKiem = txtTimKiem.getText();
        if (cbbSearchStatus.getSelectedIndex() != -1) {
            idStatus = String.valueOf(cbbSearchStatus.getSelectedIndex());
            if (cbbTimKiem.getSelectedIndex() == 0) {
                searchAll(timKiem, "", idStatus.equals("0") ? "" : idStatus);
            } else {
                searchAll("", timKiem, idStatus.equals("0") ? "" : idStatus);
            }
        }
        System.out.println(txtTimKiem.getText());
        System.out.println(cbbSearchStatus.getSelectedIndex());
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbbSearchStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSearchStatusActionPerformed

    }//GEN-LAST:event_cbbSearchStatusActionPerformed

    private void cbbSearchStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbSearchStatusMouseClicked

    }//GEN-LAST:event_cbbSearchStatusMouseClicked

    private void btnBenVanChuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBenVanChuyenActionPerformed
        int row = tblDanhSach2.getSelectedRow();
        if (row == -1) {
            return;
        }
        Long idDanhSach = Long.valueOf(tblDanhSach2.getValueAt(row, 0).toString());
        Optional<DeliveryNote> list = sv.filById(idDanhSach);
        DeliveryNote deliverynote = list.get();
        deliverynote.setStatus_id(2);
        sv.updateDeliveryNote(idDanhSach, maVanDon, deliverynote);
        loadDataAndFillTableDeli();
    }//GEN-LAST:event_btnBenVanChuyenActionPerformed

    private void btnTaoPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoPhieuActionPerformed
        insert();
    }//GEN-LAST:event_btnTaoPhieuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBenVanChuyen;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeliveryCompleted;
    private udpm.fpt.swing.ButtonMessage btnHuy;
    private javax.swing.JButton btnSearch;
    private udpm.fpt.swing.ButtonMessage btnTaoPhieu;
    private javax.swing.JButton btnUpdate;
    private udpm.fpt.swing.Combobox cbbDonViGiao;
    private udpm.fpt.swing.Combobox cbbSearchStatus;
    private udpm.fpt.swing.Combobox cbbTimKiem;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneDanhSach2;
    private javax.swing.JScrollPane jScrollPaneHoaDon;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lbDiaChi;
    private javax.swing.JTextArea lbGhiChu;
    private javax.swing.JLabel lbNgayTao;
    private javax.swing.JLabel lbNgayXuatKho;
    private javax.swing.JTextArea lbSanPham;
    private javax.swing.JLabel lbTenKhachHang;
    private javax.swing.JLabel lbTienCOD;
    private javax.swing.JTable tblDanhSach2;
    private javax.swing.JTable tblHoaDon;
    private udpm.fpt.swing.TextAreaScroll textAreaScroll1;
    private udpm.fpt.swing.TextAreaScroll textAreaScroll2;
    private udpm.fpt.swing.TextField txtDiaChi;
    private udpm.fpt.swing.TextArea txtGhiChu;
    private javax.swing.JLabel txtLoaiVanChuyen;
    private udpm.fpt.swing.TextField txtNgayGiao;
    private udpm.fpt.swing.TextField txtPhiShip;
    private udpm.fpt.swing.TextField txtSDT;
    private udpm.fpt.swing.TextField txtSoLuong;
    private udpm.fpt.swing.TextField txtTenKhachHang;
    private udpm.fpt.swing.TextArea txtTenSanPham;
    private udpm.fpt.swing.TextField txtTimKiem;
    private udpm.fpt.swing.TextField txtTongTien;
    private udpm.fpt.swing.TextField txtXapSep2;
    // End of variables declaration//GEN-END:variables
 private final SimpleDateFormat simple = new SimpleDateFormat("dd-MM-yyyy");
    private Integer idkhachHang = null;
    private Long idSanPham = null;
    private Integer idHoaDon = null;
    private String maVanDon = null;
    private final DateChooser datechooser = new DateChooser();
    private final DateChooser datechooser1 = new DateChooser();
    IDelivery_noteRespository delivery = getBean(IDelivery_noteRespository.class);
    private List<DeliveryNote> listDeli = new ArrayList<>();
    private List<BillDetails> listBillDetail = new ArrayList<>();
    private List<Bill> listBill = new ArrayList<>();
    private final Service sv = new Service();

    public void dateChooser() {
        datechooser.setTextField(txtXapSep2);
        datechooser.setDateSelectionMode(DateChooser.DateSelectionMode.BETWEEN_DATE_SELECTED);
        datechooser.setLabelCurrentDayVisible(false);
        datechooser.setDateFormat(simple);
        datechooser.addActionDateChooserListener(new DateChooserAdapter() {
            @Override
            public void dateBetweenChanged(DateBetween date, DateChooserAction action) {
                loadDataBetWeenAndFillTableDeli(date.getFromDate(), date.getToDate());
            }
        });
    }

    public void init() {
        cbbSearchFor();
        loadDataAndFillTableBillDetail();
        loadDataAndFillTableDeli();
        loadDataAndFillTableBill();
        //tableRenderer();
        cbbTimKiemTrangThai();
        UnitTranport();
        dateChooser();
        ngayTaoDon();
        OnlyNumberTextField();
    }

    public void loadDataAndFillTableDeli() {
        CompletableFuture<List<DeliveryNote>> future = this.sv.loadAsync();
        future.thenAcceptAsync(data -> {
            SwingUtilities.invokeLater(() -> {
                updateTable(data);
                listDeli = data;
            });
        }).exceptionally(throwable -> {
            throwable.printStackTrace(System.out);
            return null;
        });
    }

    public void loadDataBetWeenAndFillTableDeli(Date dateFrom, Date dateTo) {
        CompletableFuture<List<DeliveryNote>> future = this.sv.findBetweenDate(dateFrom, dateTo);
        future.thenAcceptAsync(data -> {
            SwingUtilities.invokeLater(() -> {
                updateTable(data);
            });
        }).exceptionally(throwable -> {
            throwable.printStackTrace(System.out);
            return null;
        });
    }

    public void loadDataAndFillTableBill() {
        CompletableFuture<List<Bill>> future = this.sv.findAllBill();
        future.thenAcceptAsync(data -> {
            SwingUtilities.invokeLater(() -> {
                tableBill(data);
                listBill = data;
            });
        }).exceptionally(throwable -> {
            throwable.printStackTrace(System.out);
            return null;
        });
    }

    public void loadDataAndFillTableBillDetail() {
        CompletableFuture<List<BillDetails>> future = this.sv.findAllBillDetails();
        future.thenAcceptAsync(data -> {
            SwingUtilities.invokeLater(() -> {
                listBillDetail = data;
            });
        }).exceptionally(throwable -> {
            throwable.printStackTrace(System.out);
            return null;
        });
    }

    private void updateTable(List<DeliveryNote> data) {
        TableCustom.apply(jScrollPaneHoaDon, TableCustom.TableType.DEFAULT);
        this.listDeli.clear();
        DefaultTableModel tblModel;
        tblModel = (DefaultTableModel) tblDanhSach2.getModel();
        tblModel.setRowCount(0);
        for (DeliveryNote deli : data) {
            tblModel.addRow(new Object[]{
                deli.getId(),
                deli.getBill_id(),
                deli.getWaybill_number(),
                deli.getStatus_id2().getStatusName(),
                deli.getTransport_unit_id2().getTransportUnitName(),
                deli.getShippingCost()
            });
            this.listDeli.add(deli);
        }
    }

    public void ngayTaoDon() {
        datechooser1.setTextField(txtNgayGiao);
        datechooser1.setDateSelectionMode(DateChooser.DateSelectionMode.SINGLE_DATE_SELECTED);
        datechooser1.setLabelCurrentDayVisible(false);
    }

    public void tableBill(List<Bill> listBill) {
        TableCustom.apply(jScrollPaneDanhSach2, TableCustom.TableType.DEFAULT);
        DefaultTableModel model = (DefaultTableModel) this.tblHoaDon.getModel();
        model.setRowCount(0);
        List<Bill> row = listBill;
        for (Bill bill : row) {
            Object[] rows = {
                bill.getId(),
                bill.getCustomerId() == null ? "" : bill.getCustomerId().getFullname(),
                bill.getPayment_method(),
                bill.getPayment_status(),
                bill.getNotes(),
                bill.getCreatedAt()
            };
            model.addRow(rows);
        }
    }

    public void insert() {
        String diaChi = txtDiaChi.getText();
        String ghiChu = txtGhiChu.getText();
        String ngayGiao = txtNgayGiao.getText();
        String SDT = txtSDT.getText();
        String soLuong = txtSoLuong.getText();
        String tenkhachHang = txtTenKhachHang.getText();
        String tenSanPham = sv.deleteLineBreak(txtTenSanPham.getText());
        String tongTien = txtTongTien.getText();
        int donviGiao = cbbDonViGiao.getSelectedIndex() + 1;
        maVanDon = sv.ranDom();
        String tienPhi = txtPhiShip.getText();
        try {
            if (idkhachHang == null || idSanPham == null || idHoaDon == null) {
                return;
            } else {
                if (this.isValidate()) {
                    if (sv.insertDeli(new DeliveryNote(simple.parse(ngayGiao), tenkhachHang, diaChi, idHoaDon,
                            maVanDon, donviGiao, ghiChu,
                            Double.valueOf(tienPhi), 1, SDT, tenSanPham,
                            Integer.valueOf(soLuong), Double.valueOf(tongTien)))) {
                        new Notification(Notification.Type.SUCCESS, Notification.Location.DEFAULT_DESKTOP,
                                "Add success!").showNotification();
                        loadDataAndFillTableDeli();
                        sv.updateQuanlityProduct(idSanPham, Integer.parseInt(soLuong));
                        String message = "Order confirmed" + "<br>"
                                + "Tracking code:" + maVanDon + "<br>"
                                + "Product name: <br>" + sv.addLineBreakInMessgase(tenSanPham) + "<br>"
                                + "Confirmation date" + ngayGiao;
                        new Thread(() -> {
                            System.out.println(new MailSender().sendMail("phongvvutuan@gmail.com", "vutuanphong1782004@gmail.com", "Thông tin đơn hàng của bạn", message));
                        }).start();
                    } else {
                        new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                                "Add failure!").showNotification();
                        return;
                    }
                }
            }
            this.idHoaDon = null;
            this.idSanPham = null;
            this.idkhachHang = null;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void deleteDeli() {
        int row = tblDanhSach2.getSelectedRow();
        if (row == -1) {
            return;
        }
        int hoi = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa phiếu này", "error", JOptionPane.YES_NO_OPTION);
        if (hoi == JOptionPane.YES_OPTION) {
            Long id = Long.valueOf(tblDanhSach2.getValueAt(row, 0).toString());
            delivery.deleteById(id);
            loadDataAndFillTableDeli();
        }
    }

    public void UnitTranport() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.cbbDonViGiao.getModel();
        model.removeAllElements();
        List<TransportUnit> tpu = sv.findAllTranportsUnit();
        for (TransportUnit tp : tpu) {
            model.addElement(tp.getTransportUnitName());
        }
    }

    public void OnlyNumberTextField() {
        ((AbstractDocument) txtPhiShip.getDocument()).setDocumentFilter(new NumberFilter());
        ((AbstractDocument) txtSoLuong.getDocument()).setDocumentFilter(new NumberFilter());
        //((AbstractDocument) txtSDT.getDocument()).setDocumentFilter(new NumberFilter() );
        ((AbstractDocument) txtTongTien.getDocument()).setDocumentFilter(new NumberFilter());
    }

    public void loadSearch(String search, int row) {
        CompletableFuture<List<DeliveryNote>> future = this.sv.loadSearch(search, row);
        future.thenAcceptAsync(data -> {
            SwingUtilities.invokeLater(() -> {
                updateTable(data);
            });
        }).exceptionally(throwable -> {
            throwable.printStackTrace(System.out);
            return null;
        });
    }

    public void search() {
        String searchTextField = txtTimKiem.getText();
        if (cbbTimKiem.getSelectedIndex() == 1) {
            loadSearch(searchTextField, 1);
        } else {
            loadSearch(searchTextField, 0);
        }
    }

    public void setFormThongTin(int row) {
        Long idPhieu = Long.valueOf(tblDanhSach2.getValueAt(row, 0).toString());
        for (DeliveryNote dl : listDeli) {
            if (Objects.equals(dl.getId(), idPhieu)) {
                lbNgayTao.setText(simple.format(dl.getCreationdate()));
                lbTienCOD.setText(String.valueOf(dl.getTotal_amount()));
                lbTenKhachHang.setText(String.valueOf(dl.getCustomer_name()));
                lbSanPham.setText(sv.addLineBreak(dl.getMilk_name()));
                lbDiaChi.setText(dl.getAddress());
                lbGhiChu.setText(dl.getNote());
                lbNgayXuatKho.setText(simple.format(new Date()));
                txtLoaiVanChuyen.setText(dl.getTransport_unit_id2().getTransportUnitName());
                maVanDon = dl.getWaybill_number();
            }
        }
    }

    public void cbbSearchFor() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbTimKiem.getModel();
        model.removeAllElements();
        model.addElement("By reference number");
        model.addElement("By customer name");
    }

    private Boolean isValidate() {
        if (txtDiaChi.getText().isBlank()) {
            new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP, "The ID is empty!")
                    .showNotification();
            return false;
        } else if (txtPhiShip.getText().isBlank()) {
            new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                    "The Shipping cost is empty!").showNotification();
            return false;
        } else if (txtTongTien.getText().isBlank()) {
            new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                    "The Total amount is empty!").showNotification();
            return false;
        } else if (txtSDT.getText().isBlank()) {
            new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                    "The Phone number  is empty!").showNotification();
            return false;
        } else if (txtTenKhachHang.getText().isBlank()) {
            new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                    "The Customer name is empty!").showNotification();
            return false;
        } else if (txtTenSanPham.getText().trim().isEmpty()) {
            new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                    "The Product is empty!").showNotification();
            return false;
        } else {
            try {
                if (Float.parseFloat(txtTongTien.getText()) < 4000) {
                    new Notification(Notification.Type.WARNING, Notification.Location.DEFAULT_DESKTOP,
                            "Invalid volume!").showNotification();
                    return false;
                }
            } catch (NumberFormatException e) {
            }
        }
        return true;
    }

    public void searchAll(String idDelivery, String customerName, String idStatus) {
        CompletableFuture<List<DeliveryNote>> future = this.sv.SearchAll(idDelivery, customerName, idStatus);
        future.thenAcceptAsync(data -> {
            SwingUtilities.invokeLater(() -> {
                updateTable(data);
            });
        }).exceptionally(throwable -> {
            throwable.printStackTrace(System.out);
            return null;
        });
    }

    public void cbbTimKiemTrangThai() {
        DefaultComboBoxModel cbb = (DefaultComboBoxModel) cbbSearchStatus.getModel();
        cbb.removeAllElements();
        cbb.addElement("Tất cả");
        cbb.addElement("Chờ giao hàng");
        cbb.addElement("Đang giao hàng");
        cbb.addElement("Đã giao hàng");
        cbb.addElement("Huỷ giao hàng");
        cbb.addElement("Giao thành công");
    }
}
